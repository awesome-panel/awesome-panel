---
title: "Caching Example"
date: "2024-01-07"
description: "Learn how caching can speed up your app"
author:
  - name: Marc Skov Madsen
    url: https://github.com/marcskovmadsen/  
categories: [performance, pyodide]
image: "caching_example.png"
---

## Introduction

In computing, a *cache* is a high-speed data storage layer which stores a subset of data,
typically transient in nature, so that future requests for that data are served up faster than
is possible by accessing the dataâ€™s primary storage location.

**Caching allows you to efficiently reuse previously retrieved or computed data** to
**speed up your exploration, jobs or apps**.

Good caching solutions for Panel are summarized in the table below

|Technology           |  Performance | Persistant | Horizontal Scaling | Vertical Scaling | Expiration | Preloading | Comments                           |
|---------------------|--------------|------------|--------------------| -----------------|---------------------|------------------------------------|-|
|`panel.cache` | Very Fast | Optional | Optional | Yes | Yes | Yes | Configurable |
|`panel.state.as_cached` | Very Fast | Optional | Optional | Yes | Yes | Yes | Configurable |
|`panel.state.cache` | Very Fast | No | No | Yes | No | Yes | Simple Dict Cache |
|[DiskCache](https://pypi.org/project/diskcache/) | Very Fast | Yes | No | Yes | Yes | Yes |  Simple Persistent Cache |
|[Redis](https://redis.io/) | Very Fast | Yes | Yes | Yes | Yes | Yes | Server solution. Works well with the distributed task queue [Celery](https://docs.celeryproject.org/en/stable/index.html)  |

Note that

- *Expiration* enables caching data for a period of time for example seconds, minutes, hours or
days.
- *Preloading* of a cache can be triggered by a cronjob or event.
- If the cache is *persisted*, i.e. stored to disk or runs on a server like Redis it can enable
caching data across jobs, applications, servers and restarts.

To learn more about caching check out the [AWS Caching Overview](https://aws.amazon.com/caching/)

## App

This app runs entirely in the browser via [Pyodide](https://pyodide.org) and [panel convert](https://panel.holoviz.org/how_to/wasm/convert.html).

<a href="https://awesome-panel-caching-example.static.hf.space" target="_blank">Open in a new window</a> | <a href="https://huggingface.co/spaces/awesome-panel/caching_example" target="_blank">Open in Hugging Face Spaces</a>

<iframe
	src="https://awesome-panel-caching-example.static.hf.space"
	frameborder="0"
	style="width:100%;height:750px"
></iframe>

## Code

<details>
<summary>Show </summary>
```{.python include="../../../examples/caching_example.py" code-line-numbers="true"}
```
</details>

<a href="https://raw.githubusercontent.com/awesome-panel/awesome-panel/main/examples/caching_example.py" download>Download (right-click, save-as)</a>

## Gif

<img src="https://cdn.awesome-panel.org/resources/caching_example/caching_example.gif"></img>

## Png

<img src="https://cdn.awesome-panel.org/resources/caching_example/caching_example.png"></img>

## Mp4

<video poster="https://cdn.awesome-panel.org/resources/caching_example/caching_example.png" controls>
  <source src="https://cdn.awesome-panel.org/resources/caching_example/caching_example.mp4" type="video/mp4">
  Your browser does not support HTML video.
</video>
